# 2022-08-31

WebSocket Emulation - WebSocket을 시도하고, 실패할 경우 HTTP Streaming, Long-Polling 같은 HTTP기반의 다른 기술로 전환해 다시 연결하는 것

사용 이유-
1. 모든 클라이언트에서 webSocket을 지원한다는 보장이 없음/
2. Server/Client 중간에 위치한 Proxy가 Upgrade헤더를 해석하지 못해 서버에 전달하지 못 할 수도 있다. 
3. Server/Client 중간에 위치한 Proxy가 도중에 Connection를 종료 시킬 수도 있다. 

Porxy란? - 클라이언트가 자신을 통해서 네트워크와 간접적으로 접속할 수 있는 컴퓨터 응용 프로그램
서버와 클라이언트 사이 중간 계기로 대리로 통신하는 것을 가르켜 '프록시', 그 중계를 가능하게 하는 것을 프록시 서버라고 한다.
프록시 서버 중 일부는 프록시 서버에 요청된 내용들을 캐시에 저장해 둔다.


node.js - sock.io가 일반적
Spring - sock.JS가 일반적

spring 프레임 워크는 Servlet 스텍 위에 서버/클라이언트 용도로 소켓js프로토콜을 모두 지원한다.

전송 타입
1, WebSocket 
2, HTTP Streaming 
3, HTTP LongPolling 


http는 양방향이 될 수 없고 response와 request형태로 단 방향만 가능함.
그렇기에 원하는 타이밍에 클라이언트에게 데이터를 보낼 수 없음.
 -> 서버에서 클라이언트로 요청 불가능
 
polling이란? 어떻게 보면 가장 무식한 방법인데, 무한히 n초 간격으로 클라이언트가 서버에게 request를 보내고
서버는 200으로 응답값을 지속적으로 보내주는 형태

http polling의 특징
1. 주기적으로 물어보므로 응답 간격을 일정하게 할 수 있다.
2. 주기적으로 몰아서 물어보는게 가능하므로 자동으로 배치프로세싱(일괄처리) 되어서 DB튜닝을 하는 효과가 나온다
3. '실시간'으로 주는건 볼가능하다. 실시간 효과를 내기 위해서는 서버와 클라이언트의 간격을 줄여야하지만, 서버와 클라이언트에게 부담이 된다.
4. 보낼 데이터가 없어도 지속적으로 데이터를 보내야 함으로 서버의 리소스를 낭비하게 된다.

Long Polling이란?
[JSP][Web][Java]Long Polling으로 웹 채팅구현(http 양방향)
[NodeJS][Express][Web][JavaScript]Long Polling으로 웹 채팅구현(http 양방향)

기본 방식은 polling 처럼 무한히 물어보는 것
하지만 차이점은 일반 polling은 주기적으로 물어보지만, 
Long Polling은 Time out이 될 때까지 무하정으로 기다린다.
서버가 연결을 끊어도 클라이언트에서 바로 연결을 보냄.
그렇기에 연결이 무한정 지속 될 수 있다.
그리고 클라이언트에서는 마치 실시간으로 데이터를 받는 느낌을 받는다.

http Long Polling의 특징
1. 항상 연결이 유지 되어 있다.
2. 변경에 매우 민감하게 반응한다. 사실상 실시간으로 통신이 가능하다.
3. 데이터가 주어지는 즉시 바로 반응하고 보내므로 요청간격이 줄어든다면 polling보다 더 많은 데이터를 보내게 된다.

그렇게 Long polling은 polling과 다르게 실시간으로 데이터를 헨들링 할 수 있다는 장점을 얻게 됨.
